<project name="name" basedir="." default="build">

    <property file="scriptable.properties" />
    <property name="distdir" value="${basedir}/dist" />
    <property name="buildnumber" value="${basedir}/build.number" />
    <property name="webinfdir" value="${basedir}/WEB-INF" />
    <property name="libdir" value="${basedir}/lib" />
    <property name="metainfdir" value="${distdir}/META-INF" />
    <property name="classesdir" value="${distdir}" />
    <property file="build.properties" />

    <path id="build-classpath">
        <pathelement location="${classesdir}" />
        <pathelement location="${basedir}" /><!-- needed to find scriptable.properties -->
        <fileset dir="${libdir}" includes="*.jar" />
        <fileset dir="${libdir}/build" includes="*" excludes="closure-compiler.jar" />
    </path>

    <path id="build-js-classpath">
        <pathelement location="${classesdir}" />
        <pathelement location="${basedir}" /><!-- needed to find scriptable.properties -->
        <fileset dir="${libdir}" includes="*.jar" />
        <fileset dir="${libdir}/build" includes="*" excludes="SoyToJsSrcCompiler.jar" />
    </path>

    <target name="init">
        <available file="${javadir}" property="javadir.exists" />
        <mkdir dir="${distdir}" />
    </target>

    <target name="clean">
        <delete dir="${webinfdir}" />
        <delete dir="${distdir}" />
        <delete file="${buildnumber}" />
    </target>

    <target name="compile" depends="init" if="javadir.exists">
        <javac includeantruntime="false" destdir="${classesdir}" debug="on">
            <src path="${javadir}" />
            <classpath refid="build-classpath" />
            <compilerarg value="-Xlint:deprecation" />
            <compilerarg value="-Xlint:unchecked" />
        </javac>

        <copy todir="${classesdir}">
            <fileset dir="${basedir}" includes="scriptable.properties, logging.properties" />
        </copy>
    </target>

    <target name="compile-lib-js" depends="compile">
        <taskdef name="sjscomp" classname="org.scriptable.ScriptableCompileTask"
            classpathref="build-js-classpath" />
        <sjscomp jsModuleName="scriptable/index.js" jsFunctionName="runServerJsTranspileTask"
            documentRoot="${srcdir}" basePropertyName="${group-import-name}" releasing="${releasing}" />
        <sjscomp jsModuleName="scriptable/index.js" jsFunctionName="runServerJsCompileTask"
            documentRoot="${srcdir}" basePropertyName="" releasing="${releasing}" />

        <copy todir="${classesdir}">
            <fileset dir="${webinfdir}/classes" includes="**" />
        </copy>
    </target>

    <target name="build" depends="compile, compile-lib-js">
        <uptodate targetfile="${distdir}/${jarfile}" property="jar.uptodate">
            <srcfiles dir="${distdir}" excludes="${jarfile}" />
        </uptodate>
        <jar destfile="${distdir}/${jarfile}" basedir="${distdir}" excludes="${jarfile}" />
    </target>

    <target name="tag-release">
        <input message="Please enter comment for this release:" addproperty="release.comment" />
        <exec failonerror="false" executable="git">
            <!-- don't fail if nothing to commit -->
            <arg value = "commit" />
            <arg value = "-a" />
            <arg value = "-m" />
            <arg value = "${release.comment}" />
        </exec>
        <antcall target="build-number" />
        <property file="${buildnumber}" />
        <exec failonerror="false" executable="git">
            <!-- don't fail if tag already exists -->
            <arg value = "tag" />
            <arg value = "${build.number}" />
        </exec>
    </target>

    <target name="build-number">
        <exec failonerror="true" output="${buildnumber}" executable="git">
            <arg value = "rev-parse" />
            <arg value = "--short" />
            <arg value = "HEAD" />
        </exec>
        <loadfile srcfile="${buildnumber}" property="build.number" />
        <echo file="${buildnumber}"
            append="false">build.number: ${libname}_${version.major}.${build.number}</echo>
        <copy todir="${classesdir}" file="${buildnumber}" />
    </target>

    <target name="clean-build" depends="clean, build" />

    <target name="releasing">
        <property name="releasing" value="release" />
    </target>

    <target name="release" depends="releasing, clean, tag-release, build" if="destdir">
        <copy file="${distdir}/${jarfile}" todir="${destdir}" />
    </target>

</project>

